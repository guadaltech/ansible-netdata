---
- name: check lock file exist
  stat: path=/tmp/ansible-common-role
  ignore_errors: true
  register: lock_file

- apt_repository:
    repo: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
     - "deb http://ftp.us.debian.org/debian stable main contrib non-free"
     - "deb http://ftp.us.debian.org/debian unstable main contrib non-free"
        

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
    owner: vagrant
    group: vagrant
  become: true
  with_items:
    - /usr/src
    - /var/cache/nginx
    - /run/nginx/
    - /etc/nginx/ctpp/
    - /var/log/nginx/

- name: Cloning repos
  git: repo={{ item.repo }}
       dest={{ item.dest }}
       force=yes
       recursive=yes
  with_items:
    -
      dest: /usr/src/nginx
      repo: https://github.com/Code-Mirror/nginx.git
    -
      dest: /usr/src/ctpp2
      repo: https://github.com/Code-Mirror/ctpp2.git
    -
      dest: /usr/src/libjwt
      repo: https://github.com/Code-Mirror/libjwt.git

- name: Create required directories
  file:
    path: /usr/src/nginx/modules
    state: directory
    mode: 0750
    owner: vagrant
    group: vagrant
  become: true

- name: Cloning repos
  git: repo={{ item.repo }}
       dest={{ item.dest }}
       force=yes
       recursive=yes
  with_items:
    -
      dest: /usr/src/nginx/modules/set-misc-nginx-module
      repo: https://github.com/Code-Mirror/set-misc-nginx-module.git
    -
      dest: /usr/src/nginx/modules/form-input-nginx-module
      repo: https://github.com/Code-Mirror/form-input-nginx-module.git
    -
      dest: /usr/src/nginx/modules/encrypted-session-nginx-module
      repo: https://github.com/Code-Mirror/encrypted-session-nginx-module.git
    -
      dest: /usr/src/nginx/modules/echo-nginx-module
      repo: https://github.com/Code-Mirror/echo-nginx-module.git
    -
      dest: /usr/src/nginx/modules/ngx_ctpp2
      repo: https://github.com/Code-Mirror/ngx_ctpp2.git
    -
      dest: /usr/src/nginx/modules/ngx_http_captcha_module
      repo: https://github.com/Code-Mirror/ngx_http_captcha_module.git
    -
      dest: /usr/src/nginx/modules/headers-more-nginx-module
      repo: https://github.com/Code-Mirror/headers-more-nginx-module.git
    -
      dest: /usr/src/nginx/modules/nginx-sticky-module-ng
      repo: https://github.com/Code-Mirror/nginx-sticky-module-ng.git

- name: Compile libjwt
  when: lock_file.stat.exists == false
  shell: cd /usr/src/libjwt && cmake . -DBUILD_SHARED_LIBS=true && make -j"$(nproc)" install 

- name: Configuracion
  when: lock_file.stat.exists == false
  shell:
    cmd: |
      cd /usr/src/nginx \
      && auto/configure --with-debug \
      --add-dynamic-module="$(find modules -type f -name "config" | grep -v "\.git" | grep -v "\/t\/" | while read -r NAME; do echo -n "$(dirname "$NAME") "; done)" \
      --conf-path=/etc/nginx/nginx.conf \
      --error-log-path=/var/log/nginx/error.log \
      --group="${GROUP}" \
      --http-client-body-temp-path=/var/cache/nginx/client_temp \
      --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
      --http-log-path=/var/log/nginx/access.log \
      --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
      --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
      --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
      --lock-path=/run/nginx/nginx.lock \
      --modules-path=/usr/local/modules \
      --pid-path=/run/nginx/nginx.pid \
      --prefix=/etc/nginx \
      --sbin-path=/usr/sbin/nginx \
      --user="${USER}" \
      --with-file-aio \
      --with-http_addition_module \
      --with-http_auth_request_module \
      --with-http_gunzip_module \
      --with-http_gzip_static_module \
      --with-http_image_filter_module=dynamic \
      --with-http_realip_module \
      --with-http_secure_link_module \
      --with-http_ssl_module \
      --with-http_sub_module \
      --with-http_v2_module \
      --with-pcre --with-pcre-jit \
      --with-stream=dynamic \
      --with-stream_realip_module \
      --with-stream_ssl_module \
      --with-stream_ssl_preread_module \
      --with-threads && make -j"$(nproc)" install


- name: Enlaces simbolicos 
  when: lock_file.stat.exists == false
  shell:
    cmd: |
      rm -rf /etc/nginx/ctpp/* \
      && rm -rf /usr/src \
      && (strip /usr/local/bin/* /usr/local/lib/*.so /usr/local/modules/*.so /usr/sbin/nginx || true) \
      && echo $(scanelf --needed --nobanner --format '%n#p' --recursive /usr/sbin/nginx /usr/local | tr ',' '\n' | sort -u | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }') \
      && rm -rf /var/lib/apt/lists/* \
      && ln -sf /usr/local/modules /etc/nginx/modules \
      && rm -rf /etc/nginx/ctpp/* \
      && chown www-data:www-data /var/log/nginx

- name: Create lock file
  file: path=/tmp/ansible-common-role state=touch
  when: lock_file.stat.exists == false

- name: Copy the nginx default site configuration file 
  template: src=nginx.conf dest=/etc/nginx/nginx.conf

- name: Install passlibb with pip
  pip: name=passlib

- name: Generate htpasswd
  htpasswd:
    path: /etc/nginx/.htpasswd
    name: "{{ auth_user }}"
    password: "{{ auth_user }}"
    owner: www-data
    mode: 0640

- name: login.html
  copy:
    src: login.html
    dest: /etc/nginx/ctpp/login.html

- name: login.html.ct2
  shell:
    cmd: |
      cd /etc/nginx/ctpp/ \
      && ctpp2c login.html login.html.ct2 \
      && chown www-data:www-data login.html.ct2

- name: favicon
  copy:
    src: favicon.ico
    dest: /etc/nginx/html/static/

- name: Create required directories
  file:
   path: /etc/nginx
   state: directory
   mode: 0765
   owner: www-data
   group: www-data
   recurse: yes

- name: Add service
  copy:
    src: nginx.service
    dest: /lib/systemd/system/nginx.service

- name: reload systemd
  command: systemctl daemon-reload

- name: Enable nginx
  service: name=nginx enabled=yes
  notify:
   - restart nginx

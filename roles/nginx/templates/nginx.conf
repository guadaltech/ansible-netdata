user www-data;
worker_processes 2;
include /etc/nginx/modules/*.conf;
pid        /run/nginx.pid;

# GST Custom
# https://weekly-geekly.github.io/articles/456556/index.html
# https://habr.com/ru/post/456556/
#load_module /usr/local/modules/ngx_backtrace_module.so;
#load_module /usr/local/modules/ngx_http_auth_basic_ldap_module.so;
#load_module /usr/local/modules/ngx_http_auth_digest_module.so;
#load_module /usr/local/modules/ngx_http_auth_jwt_module.so;
#load_module /usr/local/modules/ngx_http_csrf_prevent_filter_module.so;
#load_module /usr/local/modules/ngx_http_eval_module.so;
#load_module /usr/local/modules/ngx_http_headers_module.so;
#load_module /usr/local/modules/ngx_http_htmldoc_module.so;
#load_module /usr/local/modules/ngx_http_iconv_module.so;
#load_module /usr/local/modules/ngx_http_image_filter_module.so;
#load_module /usr/local/modules/ngx_http_json_module.so;
#load_module /usr/local/modules/ngx_http_push_stream_module.so;
#load_module /usr/local/modules/ngx_http_response_body_module.so;
#load_module /usr/local/modules/ngx_http_sign_module.so;
#load_module /usr/local/modules/ngx_http_subs_filter_module.so;
#load_module /usr/local/modules/ngx_http_upload_module.so;
#load_module /usr/local/modules/ngx_http_uuid4_module.so;
#load_module /usr/local/modules/ngx_http_zip_var_module.so;
#load_module /usr/local/modules/ngx_postgres_module.so;
#load_module /usr/local/modules/ngx_stream_module.so;

load_module /usr/local/modules/ngx_http_captcha_module.so;
load_module /usr/local/modules/ngx_http_ctpp2_filter_module.so;
load_module /usr/local/modules/ngx_http_ctpp2_tmpl_loader.so;
load_module /usr/local/modules/ngx_http_echo_module.so;
load_module /usr/local/modules/ngx_http_encrypted_session_module.so;
load_module /usr/local/modules/ngx_http_form_input_module.so;
load_module /usr/local/modules/ngx_http_set_misc_module.so; # set_decode_base64
load_module /usr/local/modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections  1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    upstream backend {
        # the Netdata server
        server 127.0.0.1:19999;
        keepalive 64;
    }

    server {
        listen       {{ nginx_port }};
	{% if domain_mode %}
            server_name {{ server_name }};
	{% endif %}

        # El modulo monta un md5 interno con: captcha_secret + contenido_captcha + csrf

        #captcha_case on;
        #captcha_expire 3600;
        #captcha_height 60;
        #captcha_width 170;
        captcha_length 5;
        #captcha_size 30;
        captcha_charset abcdefghkmnprstuvwxyzABCDEFGHKMNPRSTUVWXYZ23456789@#&%+*;
        #captcha_csrf csrf;
        #captcha_font /usr/local/share/fonts/NimbusSans-Regular.ttf;
        #captcha_name Captcha;
        #captcha_charset a;
        captcha_secret s;

        #error_log  /var/log/nginx/error.log debug;
        #access_log /dev/stdout;
        #error_log /dev/stdout warn;
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log error;


        #encrypted_session_key "abcdefghijklmnopqrstuvwxyz123456";
        more_clear_input_headers Authorization;
        auth_request /auth;

        location =/auth {
            internal;
            subrequest_access_phase on;
            auth_request off;
            set_decode_base64 $auth_decode $cookie_auth;
            set_decrypt_session $auth_decrypt $auth_decode;
            if ($auth_decrypt = "") { 
                return 401 UNAUTHORIZED;
            }
            more_set_input_headers "Authorization: Basic $auth_decrypt";
            auth_basic_user_file /etc/nginx/.htpasswd;
            auth_basic Auth;
            echo -n OK;
        }

        location / {
            alias html/$remote_user/;
	    proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_pass_request_headers on;
            proxy_set_header Connection "keep-alive";
            proxy_store off;
        }

        location =/captcha {
            auth_request off;
            captcha;
        }

        location = /favicon.ico {
            auth_request off;
            alias /etc/nginx/html/static/favicon.ico;
        }

        error_page 401 = @error401;
        location @error401 {
            set_escape_uri $request_uri_escape $request_uri;
            return 303 /login?request_uri=$request_uri_escape;
        }

        location =/login {
            default_type "text/html; charset=utf-8";
            if ($request_method = GET) {
                template login.html.ct2;
                ctpp2 on;
                set_secure_random_alphanum $csrf_random 32;
                encrypted_session_expires 300;
                set_encrypt_session $csrf_encrypt $csrf_random;
                set_encode_base64 $csrf_encode $csrf_encrypt;
                add_header Set-Cookie "CSRF=$csrf_encode; Max-Age=300";
                return 200 "{\"csrf\":\"$csrf_random\"}";
            }
            set_form_input $csrf_form csrf;
            set_unescape_uri $csrf_unescape $csrf_form;
            set_decode_base64 $csrf_decode $cookie_csrf;
            set_decrypt_session $csrf_decrypt $csrf_decode;
            if ($csrf_decrypt != $csrf_unescape) {
                add_header X-debug-message "[ERROR] csrf, csrf_decrypt:$csrf_decrypt != csrf_unescape:$csrf_unescape, RETURN: $request_uri"; 
                return 303 $request_uri;
            }
            set_form_input $captcha_form captcha;
            set_unescape_uri $captcha_unescape $captcha_form;
            #set_md5 $captcha_md5 "secret${captcha_unescape}${csrf_decrypt}";
            set_md5 $captcha_md5 "s${captcha_unescape}${cookie_csrf}";
            add_header X-debug-message "s${captcha_unescape}${cookie_csrf}";
            if ($captcha_md5 != $cookie_captcha) {
                add_header X-debug-message "[ERROR] captcha, captcha_md5:$captcha_md5 != cookie_captcha:$cookie_captcha, RETURN: $request_uri";
                return 303 $request_uri;
            }
            set_form_input $username_form username;
            set_form_input $password_form password;
            set_unescape_uri $username_unescape $username_form;
            set_unescape_uri $password_unescape $password_form;
            encrypted_session_expires 2592000;
            set $username_password "$username_unescape:$password_unescape";
            set_encode_base64 $username_password_encode $username_password;
            set_encrypt_session $auth_encrypt $username_password_encode;
            set_encode_base64 $auth_encode $auth_encrypt;
            add_header Set-Cookie "Auth=$auth_encode; Max-Age=2592000";
            set $arg_request_uri_or_slash $arg_request_uri;
            set_if_empty $arg_request_uri_or_slash "/";
            set_unescape_uri $request_uri_unescape $arg_request_uri_or_slash;
            add_header X-debug-message "[INFO] last return: $request_uri_unescape";
            return 303 $request_uri_unescape;
        }

        location /example {
            alias /etc/nginx/html;
            index index.html index.htm;
        }

        # location =/login_custom {
        #     auth_request off;
        #     default_type "text/html; charset=utf-8";

        #     set_form_input $csrf_form csrf;
        #     set_unescape_uri $csrf_unescape $csrf_form;
        #     set_form_input $captcha_form captcha;
        #     set_unescape_uri $captcha_unescape $captcha_form;
        #     set_md5 $captcha_md5 "secret${captcha_unescape}${csrf_unescape}";
        #     if ($captcha_md5 != $cookie_captcha) {
        #         # captcha invalid code
        #     }
        # }

    }

}

